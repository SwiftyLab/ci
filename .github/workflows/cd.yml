name: Check if release needed

on:
  workflow_call:
    inputs:
      os:
        description: OS to build products on
        required: false
        type: string
        default: macos-latest
      version:
        description: New version to release
        required: false
        type: string
      cocoapods:
        description: Whether to publish to CocoaPods
        required: false
        type: boolean
        default: true
      swift-package:
        description: Whether to release as Swift Package
        required: false
        type: boolean
        default: true
    secrets:
      COCOAPODS_TRUNK_TOKEN:
        description: CocoaPods Trunk Token to publish release
        required: true

jobs:
  cd:
    name: Build and Publish
    runs-on: ${{ inputs.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7

    - name: Setup repository
      uses: SwiftyLab/ci/actions/setup@main

    - name: Conventional Changelog Action
      id: changelog
      uses: SwiftyLab/ci/actions/changelog@main
      with:
        version: ${{ inputs.version }}

    - name: Build package products and documentation
      if: steps.changelog.outputs.skipped == 'false'
      run: |
        npm run build
        npm run build-doc
        npm run serve-doc
        npm run archive

    - name: Release GitHub Pages
      if: steps.changelog.outputs.skipped == 'false'
      continue-on-error: true
      uses: JamesIves/github-pages-deploy-action@v4.4.0
      with:
          branch: gh-pages
          folder: .docc-build
          target-folder: docs
          clean: false
          commit-message: 'chore(GitHub Pages): release site for tag ${{ steps.conventional_changelog.outputs.tag }}'

    - name: Create GitHub Release
      if: steps.changelog.outputs.skipped == 'false'
      continue-on-error: true
      uses: ncipollo/release-action@v1
      with:
        token: ${{ github.token }}
        tag: ${{ steps.changelog.outputs.tag }}
        body: ${{ steps.changelog.outputs.changelog }}
        artifacts: '*.zip'

    - name: Publish to CocoaPods trunk
      if: inputs.cocoapods == 'true' && steps.changelog.outputs.skipped == 'false'
      continue-on-error: true
      run: |
        set -eo pipefail
        pod trunk push --skip-import-validation --skip-tests --allow-warnings
      env:
        COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}

    - name: Publish to Swift Package Registry
      if: inputs.swift-package == 'true' && steps.changelog.outputs.skipped == 'false'
      continue-on-error: true
      uses: twodayslate/swift-package-registry@v0.0.2
